
    /**
{% block phpdoc_method_header %}
     * Get a {{ entity }}
     *
{% block documentation %}
{% if swagger %}
     * @ApiDoc(
     *   section = "{{ entity }}",
     *   description = "Get a {{ entity }}.",
     *   resource = true,
     *   requirements={
     *     {
     *        "name"="{{ entity_identifier }}",
     *        "dataType"="{{ entity_identifier_type }}",
     *        "requirement"="{{ requirement_regex }}",
     *        "description"="{{ entity }} identifier."
     *     }
     *   },
     *   output="{{ namespace }}\Entity\{{ entity_namespace }}{{ entity }}",
     *   statusCodes={
     *     200 = "{{ entity }}.",
     *     404 = "Not Found."
     *   }
     * )
     *
{% endif %}
{% endblock documentation %}
     * @Rest\View(serializerEnableMaxDepthChecks=true)
     *
     * @param $id
     *
     * @return Response
     */
{% endblock phpdoc_method_header %}
{% block method_definition %}
    public function getAction($id)
{% endblock method_definition %}
    {
{% block method_body %}
        ${{ entity|lowerfirst }} = $this->getOr404($id);

        $authChecker = $this->get('security.authorization_checker');
        if (! $authChecker->isGranted('view', ${{ entity|lowerfirst }})) {
            throw $this->createAccessDeniedException('Unauthorized access!');
        }

        $answer{{ resource ? "['" ~ entity|lowerfirst|pluralize ~  "'][]" }} = ${{ entity|lowerfirst }};

        return $answer;
{% endblock method_body %}
{% block method_return '' %}
    }
